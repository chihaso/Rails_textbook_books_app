version: 2.1

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.6.3-stretch-node
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: postgres_user
      PGPASSWORD: ""
      RAILS_ENV: test
  postgres: &postgres
    image: circleci/postgres:9.5-alpine
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_DB: books_app_test
      POSTGRES_PASSWORD: ""

commands:
  install_gems:
    steps:
      - run:
          name: Install budler
          command: gem install bundler:2.1.2
      - restore_cache:
          keys:
            - books_app-bundle-{{ checksum "Gemfile.lock" }}
            - books_app-bundle-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: books_app-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  install_yarn_packages:
    steps:
      - restore_cache:
          keys:
            - books_app-yarn-{{ checksum "yarn.lock" }}
            - books_app-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: books_app-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - install_gems
      - install_yarn_packages

  test:
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - install_gems
      - install_yarn_packages
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Run Tests
          command: bundle exec rails test
          when: always
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
          destination: reports
  deploy:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - install_gems
      - run:
          name: Deploy
          command: bundle exec cap production deploy

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: test
